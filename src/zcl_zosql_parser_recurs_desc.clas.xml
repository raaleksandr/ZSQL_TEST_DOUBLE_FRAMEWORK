<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_CLAS" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <VSEOCLASS>
    <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
    <LANGU>E</LANGU>
    <DESCRIPT>SQL recursive descent parser</DESCRIPT>
    <STATE>1</STATE>
    <CLSCCINCL>X</CLSCCINCL>
    <FIXPT>X</FIXPT>
    <UNICODE>X</UNICODE>
   </VSEOCLASS>
   <DESCRIPTIONS>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>EXISTS_CHILD_NODE_WITH_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if child node with specified type exists</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_CHILD_NODES</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns child nodes for the node in syntax tree</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_CHILD_NODES_RECURSIVE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns all childs on all levels recursively</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_CHILD_NODES_WITH_SELF</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns child nodes for the node including top node itself</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_CHILD_NODE_TOKEN_WITH_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns child node with certain node_type</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_CHILD_NODE_WITH_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns child node with certain node_type</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_CHILD_NODE_WITH_TYPE_RECUR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns child node with certain node_type search recursively</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_NODE_END_TOKEN_INDEX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns index of end token of node and all its descendants</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_NODE_INFO</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns parameters of node</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_NODE_SQL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns SQL part that corresponds to node</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_NODE_SQL_START_AT_OFFSET</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns SQL part that start at nth token after the node</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_NODE_SQL_WITHOUT_SELF</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns SQL part that corresponds to node with text of node</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_NODE_TOKEN_INDEX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns index of token corresponding to the node</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_SQL_AS_RANGE_OF_TOKENS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns SQL part set as range of token (start index/end ind)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_TOKEN_OF_NTH_CHILD_NODE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns token of nth child node</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>GET_TOP_NODE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns top node of syntax tree</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>MT_TOKENS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>List of SQL tokens</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>MV_CURRENT_TOKEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Current token</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>MV_CURRENT_TOKEN_INDEX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Index of current token</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>MV_CURRENT_TOKEN_UCASE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Current token in upper case</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>MV_REACHED_TO_END_FLAG</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Flag if parser reached to the end of string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>MV_SQL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Full text of SQL query</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>RUN_RECURSIVE_DESCENT_PARSER</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Runs the parser of SQL using the regression descent method</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>SET_SQL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Passes SQL expression into the class</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_ADD_NODE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Adds node to parse tree</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_ALIAS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses alias</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_COL_SPEC</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses a column</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_DELETE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses delete SQL statement</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_DELETE_NODE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Deletes node from tree attaching children to it&apos;s parent</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses SQL expression (in where or JOIN)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION_AND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses SQL expression separated by &apos;AND&apos;</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION_BETWEEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses expression like &apos;BETWEEN &lt;val1&gt; AND &lt;val2&gt;&apos;</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION_EXISTS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses expression in case it is EXISTS condition in where</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION_IN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses IN expression in where/join condition</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION_IN_BRACKETS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses expression inside brackets</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION_LEFT_PART</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses left part of elementary expression</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION_LIKE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses expression with &apos;LIKE&apos; operation</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION_NOT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses NOT &lt;EXPRESSION&gt; in SQL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_EXPRESSION_OR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>SQL expression separated by &apos;OR&apos;</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_FOR_ALL_ENTRIES_IN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses &apos;FOR ALL ENTRIES IN&apos; construction</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_FROM</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parse FROM statement</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_FUNCTION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses function in select</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_FUNCTION_WITHOUT_ALIAS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses function in select and doesn&apos;t parse alias</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_GROUP_BY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses GROUP BY in select SQL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_GROUP_ORDER_FIELDS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses field list for GROUP BY or ORDER BY</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_HAVING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses &apos;HAVING&apos; part of SQL select</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_JOIN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses join in &apos;FROM&apos; part of select</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_MINIMIZE_NESTED_NODE_CHAINS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Minimizes chains of nested nodes when node is nested to self</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_ON_EXPRESSION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses ON &lt;expression&gt; in join</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_ORDER_BY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses ORDER BY in select SQL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_POP_POSITION_AND_STATE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Return position and state from stack top element</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_PUSH_POSITION_AND_STATE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Push position and state to stack</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_RIGHT_OPERAND_IN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Right operand of comparison</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_RIGHT_OPERAND_LIST_OF_VALS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses right operand in case it is a list of values in ( )</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_SELECT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parse the &apos;SELECT&apos; part of grammar (means the whole SELECT)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_SELECT_FIELD</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses one select field</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_SELECT_FIELDS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Adds select fields</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_STEP_FORWARD</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Moves position to next token, fills some attributes</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_STEP_TO_INDEX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Moves position to certain token index, fills some attributes</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_SUBQUERY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parse subquery in where</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_TABLE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Add table name to parsed tree (after &apos;FROM&apos;)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_UPDATE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses UPDATE SQL statement</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_UPDATE_SET_FIELD</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses one field in UPDATE SET statement</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_UPDATE_SET_FIELDS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses SET part of UPDATE SQL statement</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_UP_TO_N_ROWS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses &apos;UP TO &lt;N&gt; ROWS&apos; part of select SQL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_PARSER_RECURS_DESC</CLSNAME>
     <CMPNAME>_WHERE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Parses where in SQL</DESCRIPT>
    </SEOCOMPOTX>
   </DESCRIPTIONS>
  </asx:values>
 </asx:abap>
</abapGit>
