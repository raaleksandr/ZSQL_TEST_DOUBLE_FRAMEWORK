<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_CLAS" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <VSEOCLASS>
    <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
    <LANGU>E</LANGU>
    <DESCRIPT>Different utilities for Z-SQL Double Framework library</DESCRIPT>
    <STATE>1</STATE>
    <CLSCCINCL>X</CLSCCINCL>
    <FIXPT>X</FIXPT>
    <UNICODE>X</UNICODE>
    <MSG_ID>ZOSQL_DB_LAYER</MSG_ID>
    <WITH_UNIT_TESTS>X</WITH_UNIT_TESTS>
   </VSEOCLASS>
   <DESCRIPTIONS>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>BOOLEAN_NOT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Applies boolean not to abap_bool</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>CHECK_ENDS_WITH_TOKEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Check if select string ends with certain token</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>CHECK_STARTS_WITH_TOKEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Check if select string start with certain token</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>CLEAR_QUOTES_FROM_VALUE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Clears quotes from where condition value</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>CONDENSE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Standrad condens for possibility of inline calls</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>COPY_AND_RETURN_AS_REF_TO_DATA</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Copies value and returns as ref to data</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>CREATE_HASH_TAB_LIKE_STANDARD</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Creates hashed internal table which is like standard</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>DELETE_END_TOKEN_IF_EQUALS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Deletes end token from query if it equals to certain string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>DELETE_N_END_TOKENS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Deletes N tokens at the end of SQL expression</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>DELETE_START_TOKEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Deletes the token from query if it is in first place</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>DELETE_START_TOKEN_IF_EQUALS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Deletes first token from query if it equals to a string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>DUMMY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>A dummy variable i like when it is</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>GET_FIRST_N_CHARS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Get first N characters of string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>GET_LAST_N_CHARS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Get last N characters of string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>GET_START_TOKEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns first token of SQL expression</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>IS_CHAR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if variable is a char (string, char etc)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>IS_INTERNAL_TABLE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if variable is an internal table</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>IS_NUMBER</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if variable is a number (p, float, int etc)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>IS_STRUCTURE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if variable is a structure</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>MOVE_CORRESPONDING_TABLE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>For backward compatibility don&apos;t do it straight</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>MOVE_ONE_REF_TO_ANOTHER</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Moves one ref to data to another ref to data</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>RAISE_EXCEPTION_FROM_SY_MSG</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Raises exception containing sy message as descript</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>RAISE_IF_TRANSP_TAB_NOT_EXIST</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Check if there exists transparent table with such name</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>SALV_SET_FIELDNAMES_TO_COL_TIT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Set column titles to field name of SALV</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>SPLIT_CONDITION_INTO_TOKENS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Splits any SQL condition into separate tokens</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>TO_UPPER_CASE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Converts string to upper case</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>TRANSPARENT_TABLE_EXISTS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if transparent table exists with this name</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>TRY_TO_GUESS_TABNAME_BY_DATA</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Tries to guess which table it is by data</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>_SPLIT_INTO_TOKENS_AT_SEP</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Splits any SQL condition into separate tokens</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_UTILS</CLSNAME>
     <CMPNAME>_SPLIT_INTO_TOKENS_AT_SEP_ITAB</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Splits table of SQL conditions into separate tokens</DESCRIPT>
    </SEOCOMPOTX>
   </DESCRIPTIONS>
  </asx:values>
 </asx:abap>
</abapGit>
