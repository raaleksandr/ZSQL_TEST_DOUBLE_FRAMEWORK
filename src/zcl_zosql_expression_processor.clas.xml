<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_CLAS" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <VSEOCLASS>
    <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
    <LANGU>E</LANGU>
    <DESCRIPT>Class to process SQL logical expression (where,join,having)</DESCRIPT>
    <STATE>1</STATE>
    <CLSCCINCL>X</CLSCCINCL>
    <FIXPT>X</FIXPT>
    <UNICODE>X</UNICODE>
    <MSG_ID>ZOSQL_DB_LAYER</MSG_ID>
   </VSEOCLASS>
   <DESCRIPTIONS>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>CONSTRUCTOR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>CONSTRUCTOR</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>C_BETWEEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>&apos;BETWEEN&apos; keyword in select condition</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>C_IN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>&apos;IN&apos; keyword in select condition</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>C_LIKE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>&apos;LIKE&apos; keyword in select condition</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>C_NOT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>&apos;NOT&apos; keyword in select condition</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>GET_ALL_OPERANDS_REF</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns reference to all operands of expression</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>INITIALIZE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Initializes object from SQL Parser main method</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>IS_PARAMETER_COMPARED_AS_RANGE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Cheks if the parameter is compared with &apos;IN&apos; operator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>MO_ITERATOR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Iterator through records</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>MO_PARAMETERS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Instance storing parameters for dynamic SQL Query</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>MS_LEFT_OPERAND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Left operand of expression</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>MS_RIGHT_OPERAND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Right operand of expression</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>MT_LIST_OF_VALUES_FOR_IN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>List of values for &apos;IN&apos; operator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>MV_EMPTY_CONDITION_FLAG</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Flag if the condition is empty (then it is always true)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>MV_ESCAPE_SYMBOL_FOR_LIKE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Escape symbol after &apos;ESCAPE&apos; in &apos;LIKE&apos; operation</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>MV_NOT_FLAG</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>True if elementary condition is with &apos;NOT&apos; addition</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>MV_OPERATION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Operation (=, EQ, GE etc)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>NEED_TO_CHECK_FIELD_IN_DATASET</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if we need to perform check of field existence in DS</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>TRY_FILL_ONE_OPERAND_DATASET</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Tries to fill dataset for one operand</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>TRY_TO_FILL_OPERANDS_DATASET</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Tries to filll datasets for all operands of expression</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CHECK_BETWEEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks condition for expression with BETWEEN</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CHECK_ELEMENTARY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Perform check for elementary case without nesting</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CHECK_FIELDNAME_IN_DATASET</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if fieldname exists in dataset(s) of iterator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CHECK_IF_OPERAND_IS_PARAMETER</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks whether value is parameter</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CHECK_IN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Check conditions for &apos;IN&apos; operator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CHECK_LIKE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Check conditions for &apos;LIKE&apos; operator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CHECK_ONE_OPERAND_CORRECT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks one SQL operand on correctness</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CHECK_OPERANDS_CORRECT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks all operands on correctness</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CHECK_WITH_COMPARE_OPERATOR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Performs check in case of comparison operator (EQ,LE,GE etc)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_COMPARE_VALUES</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Compares two values with operator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CONSIDER_NOT_IN_ELEMENTARY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Consider &apos;NOT&apos; keyword in elementary expression</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CONVERT_LIKE_TO_CP</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Converts mask for LIKE in SQL into mask for CP in ABAP</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_CONVERT_SQLFIELD_TO_OPERAND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Splits fieldname into parts - dataset name and field name</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_FILL_NEW_SYNTAX_ATTRIBUTE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Fills mv_new_syntax attribute</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_GET_REF_TO_LEFT_OPERAND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns reference to value of left operand after all oper..s</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_GET_REF_TO_OPERAND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns ref to value of operand of a condition of any kind</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_GET_REF_TO_OPERAND_DATASET</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns ref to value of operand of a condition from dataset</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_GET_REF_TO_RIGHT_OPERAND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Returns reference to value of right operand after all oper.s</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_INIT_BETWEEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Initializes object for BETWEEN operator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_INIT_COMPARISON</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Initializes object in case of ordinary comparison operator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_INIT_ELEMENTARY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Simple case when there is just elementary condition</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_INIT_IN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Initializes object for IN operator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_INIT_LEFT_PART</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Initializes left part of elementary expression</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_INIT_LIKE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Initializes object for LIKE operator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_INIT_LOGICAL_CONDITION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Process logical condition in parsed SQL (AND, OR)</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_NEED_TO_IGNORE_CONDITION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if condition needs to be ignored</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_RAISE_IF_CANNOT_COMPARE_VALS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Raises error if values cannot be compared to each other</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_RAISE_IF_RIGHT_OPERAND_RANGE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Checks if right operand is range and raises error if true</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ZOSQL_EXPRESSION_PROCESSOR</CLSNAME>
     <CMPNAME>_TRY_TO_GET_PARAMETER_NAME</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Tries to return parameter name if value is parameter</DESCRIPT>
    </SEOCOMPOTX>
   </DESCRIPTIONS>
  </asx:values>
 </asx:abap>
</abapGit>
